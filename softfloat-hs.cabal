name:                softfloat-hs
version:             0.1.0
synopsis:            Haskell bindings for SoftFloat
description:
  Provides a pure functional interface to John Hauser's SoftFloat, an implementation
  of IEEE floating point in the C programming language.
homepage:            https://github.com/GaloisInc/softfloat-hs
license:             BSD3
license-file:        LICENSE
author:              Ben Selfridge
maintainer:          benselfridge@galois.com
copyright:           March 2018
category:            Math
build-type:          Simple
cabal-version:       >=1.10
extra-source-files:  README.md

flag UseBundledC
     description: Use a bundled copy of the C sources for the softfloat library
     default: True
     manual: True

library
  exposed-modules:     SoftFloat
                     , SoftFloat.Internal
  hs-source-dirs:      src
  include-dirs:        include
  install-includes:    softfloat_wrappers.h
  c-sources:           csrc/softfloat_wrappers.c
  ghc-options:         -Wall
  default-language:    Haskell2010
  build-depends:       base >= 4.7 && < 5
  if flag(UseBundledC) && ( (os(linux) && arch(x86_64)) || (os(darwin) && arch(x86_64)) )
    if (os(linux) || os(darwin)) && arch(x86_64)
      cc-options: -DSOFTFLOAT_FAST_INT64 -O2 -DSOFTFLOAT_ROUND_ODD -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -DSOFTFLOAT_FAST_DIV64TO32
      include-dirs: csrc/build/Linux-x86_64-GCC
                    csrc/source/8086-SSE
                    csrc/source/include

    c-sources:
      csrc/source/extF80M_add.c
      csrc/source/extF80M_div.c
      csrc/source/extF80M_eq.c
      csrc/source/extF80M_eq_signaling.c
      csrc/source/extF80M_le.c
      csrc/source/extF80M_le_quiet.c
      csrc/source/extF80M_lt.c
      csrc/source/extF80M_lt_quiet.c
      csrc/source/extF80M_mul.c
      csrc/source/extF80M_rem.c
      csrc/source/extF80M_roundToInt.c
      csrc/source/extF80M_sqrt.c
      csrc/source/extF80M_sub.c
      csrc/source/extF80M_to_f128M.c
      csrc/source/extF80M_to_f16.c
      csrc/source/extF80M_to_f32.c
      csrc/source/extF80M_to_f64.c
      csrc/source/extF80M_to_i32.c
      csrc/source/extF80M_to_i32_r_minMag.c
      csrc/source/extF80M_to_i64.c
      csrc/source/extF80M_to_i64_r_minMag.c
      csrc/source/extF80M_to_ui32.c
      csrc/source/extF80M_to_ui32_r_minMag.c
      csrc/source/extF80M_to_ui64.c
      csrc/source/extF80M_to_ui64_r_minMag.c
      csrc/source/extF80_add.c
      csrc/source/extF80_div.c
      csrc/source/extF80_eq.c
      csrc/source/extF80_eq_signaling.c
      csrc/source/extF80_isSignalingNaN.c
      csrc/source/extF80_le.c
      csrc/source/extF80_le_quiet.c
      csrc/source/extF80_lt.c
      csrc/source/extF80_lt_quiet.c
      csrc/source/extF80_mul.c
      csrc/source/extF80_rem.c
      csrc/source/extF80_roundToInt.c
      csrc/source/extF80_sqrt.c
      csrc/source/extF80_sub.c
      csrc/source/extF80_to_f128.c
      csrc/source/extF80_to_f16.c
      csrc/source/extF80_to_f32.c
      csrc/source/extF80_to_f64.c
      csrc/source/extF80_to_i32.c
      csrc/source/extF80_to_i32_r_minMag.c
      csrc/source/extF80_to_i64.c
      csrc/source/extF80_to_i64_r_minMag.c
      csrc/source/extF80_to_ui32.c
      csrc/source/extF80_to_ui32_r_minMag.c
      csrc/source/extF80_to_ui64.c
      csrc/source/extF80_to_ui64_r_minMag.c
      csrc/source/f128M_add.c
      csrc/source/f128M_div.c
      csrc/source/f128M_eq.c
      csrc/source/f128M_eq_signaling.c
      csrc/source/f128M_le.c
      csrc/source/f128M_le_quiet.c
      csrc/source/f128M_lt.c
      csrc/source/f128M_lt_quiet.c
      csrc/source/f128M_mul.c
      csrc/source/f128M_mulAdd.c
      csrc/source/f128M_rem.c
      csrc/source/f128M_roundToInt.c
      csrc/source/f128M_sqrt.c
      csrc/source/f128M_sub.c
      csrc/source/f128M_to_extF80M.c
      csrc/source/f128M_to_f16.c
      csrc/source/f128M_to_f32.c
      csrc/source/f128M_to_f64.c
      csrc/source/f128M_to_i32.c
      csrc/source/f128M_to_i32_r_minMag.c
      csrc/source/f128M_to_i64.c
      csrc/source/f128M_to_i64_r_minMag.c
      csrc/source/f128M_to_ui32.c
      csrc/source/f128M_to_ui32_r_minMag.c
      csrc/source/f128M_to_ui64.c
      csrc/source/f128M_to_ui64_r_minMag.c
      csrc/source/f128_add.c
      csrc/source/f128_div.c
      csrc/source/f128_eq.c
      csrc/source/f128_eq_signaling.c
      csrc/source/f128_isSignalingNaN.c
      csrc/source/f128_le.c
      csrc/source/f128_le_quiet.c
      csrc/source/f128_lt.c
      csrc/source/f128_lt_quiet.c
      csrc/source/f128_mul.c
      csrc/source/f128_mulAdd.c
      csrc/source/f128_rem.c
      csrc/source/f128_roundToInt.c
      csrc/source/f128_sqrt.c
      csrc/source/f128_sub.c
      csrc/source/f128_to_extF80.c
      csrc/source/f128_to_f16.c
      csrc/source/f128_to_f32.c
      csrc/source/f128_to_f64.c
      csrc/source/f128_to_i32.c
      csrc/source/f128_to_i32_r_minMag.c
      csrc/source/f128_to_i64.c
      csrc/source/f128_to_i64_r_minMag.c
      csrc/source/f128_to_ui32.c
      csrc/source/f128_to_ui32_r_minMag.c
      csrc/source/f128_to_ui64.c
      csrc/source/f128_to_ui64_r_minMag.c
      csrc/source/f16_add.c
      csrc/source/f16_div.c
      csrc/source/f16_eq.c
      csrc/source/f16_eq_signaling.c
      csrc/source/f16_isSignalingNaN.c
      csrc/source/f16_le.c
      csrc/source/f16_le_quiet.c
      csrc/source/f16_lt.c
      csrc/source/f16_lt_quiet.c
      csrc/source/f16_mul.c
      csrc/source/f16_mulAdd.c
      csrc/source/f16_rem.c
      csrc/source/f16_roundToInt.c
      csrc/source/f16_sqrt.c
      csrc/source/f16_sub.c
      csrc/source/f16_to_extF80.c
      csrc/source/f16_to_extF80M.c
      csrc/source/f16_to_f128.c
      csrc/source/f16_to_f128M.c
      csrc/source/f16_to_f32.c
      csrc/source/f16_to_f64.c
      csrc/source/f16_to_i32.c
      csrc/source/f16_to_i32_r_minMag.c
      csrc/source/f16_to_i64.c
      csrc/source/f16_to_i64_r_minMag.c
      csrc/source/f16_to_ui32.c
      csrc/source/f16_to_ui32_r_minMag.c
      csrc/source/f16_to_ui64.c
      csrc/source/f16_to_ui64_r_minMag.c
      csrc/source/f32_add.c
      csrc/source/f32_div.c
      csrc/source/f32_eq.c
      csrc/source/f32_eq_signaling.c
      csrc/source/f32_isSignalingNaN.c
      csrc/source/f32_le.c
      csrc/source/f32_le_quiet.c
      csrc/source/f32_lt.c
      csrc/source/f32_lt_quiet.c
      csrc/source/f32_mul.c
      csrc/source/f32_mulAdd.c
      csrc/source/f32_rem.c
      csrc/source/f32_roundToInt.c
      csrc/source/f32_sqrt.c
      csrc/source/f32_sub.c
      csrc/source/f32_to_extF80.c
      csrc/source/f32_to_extF80M.c
      csrc/source/f32_to_f128.c
      csrc/source/f32_to_f128M.c
      csrc/source/f32_to_f16.c
      csrc/source/f32_to_f64.c
      csrc/source/f32_to_i32.c
      csrc/source/f32_to_i32_r_minMag.c
      csrc/source/f32_to_i64.c
      csrc/source/f32_to_i64_r_minMag.c
      csrc/source/f32_to_ui32.c
      csrc/source/f32_to_ui32_r_minMag.c
      csrc/source/f32_to_ui64.c
      csrc/source/f32_to_ui64_r_minMag.c
      csrc/source/f64_add.c
      csrc/source/f64_div.c
      csrc/source/f64_eq.c
      csrc/source/f64_eq_signaling.c
      csrc/source/f64_isSignalingNaN.c
      csrc/source/f64_le.c
      csrc/source/f64_le_quiet.c
      csrc/source/f64_lt.c
      csrc/source/f64_lt_quiet.c
      csrc/source/f64_mul.c
      csrc/source/f64_mulAdd.c
      csrc/source/f64_rem.c
      csrc/source/f64_roundToInt.c
      csrc/source/f64_sqrt.c
      csrc/source/f64_sub.c
      csrc/source/f64_to_extF80.c
      csrc/source/f64_to_extF80M.c
      csrc/source/f64_to_f128.c
      csrc/source/f64_to_f128M.c
      csrc/source/f64_to_f16.c
      csrc/source/f64_to_f32.c
      csrc/source/f64_to_i32.c
      csrc/source/f64_to_i32_r_minMag.c
      csrc/source/f64_to_i64.c
      csrc/source/f64_to_i64_r_minMag.c
      csrc/source/f64_to_ui32.c
      csrc/source/f64_to_ui32_r_minMag.c
      csrc/source/f64_to_ui64.c
      csrc/source/f64_to_ui64_r_minMag.c
      csrc/source/i32_to_extF80.c
      csrc/source/i32_to_extF80M.c
      csrc/source/i32_to_f128.c
      csrc/source/i32_to_f128M.c
      csrc/source/i32_to_f16.c
      csrc/source/i32_to_f32.c
      csrc/source/i32_to_f64.c
      csrc/source/i64_to_extF80.c
      csrc/source/i64_to_extF80M.c
      csrc/source/i64_to_f128.c
      csrc/source/i64_to_f128M.c
      csrc/source/i64_to_f16.c
      csrc/source/i64_to_f32.c
      csrc/source/i64_to_f64.c
      csrc/source/s_add128.c
      csrc/source/s_add256M.c
      csrc/source/s_addCarryM.c
      csrc/source/s_addComplCarryM.c
      csrc/source/s_addM.c
      csrc/source/s_addMagsExtF80.c
      csrc/source/s_addMagsF128.c
      csrc/source/s_addMagsF16.c
      csrc/source/s_addMagsF32.c
      csrc/source/s_addMagsF64.c
      csrc/source/s_approxRecip32_1.c
      csrc/source/s_approxRecipSqrt32_1.c
      csrc/source/s_approxRecipSqrt_1Ks.c
      csrc/source/s_approxRecip_1Ks.c
      csrc/source/s_compare128M.c
      csrc/source/s_compare96M.c
      csrc/source/s_countLeadingZeros16.c
      csrc/source/s_countLeadingZeros32.c
      csrc/source/s_countLeadingZeros64.c
      csrc/source/s_countLeadingZeros8.c
      csrc/source/s_eq128.c
      csrc/source/s_invalidExtF80M.c
      csrc/source/s_isNaNF128M.c
      csrc/source/s_le128.c
      csrc/source/s_lt128.c
      csrc/source/s_mul128By32.c
      csrc/source/s_mul128MTo256M.c
      csrc/source/s_mul128To256M.c
      csrc/source/s_mul64ByShifted32To128.c
      csrc/source/s_mul64To128.c
      csrc/source/s_mul64To128M.c
      csrc/source/s_mulAddF128.c
      csrc/source/s_mulAddF16.c
      csrc/source/s_mulAddF32.c
      csrc/source/s_mulAddF64.c
      csrc/source/s_negXM.c
      csrc/source/s_normExtF80SigM.c
      csrc/source/s_normRoundPackToExtF80.c
      csrc/source/s_normRoundPackToF16.c
      csrc/source/s_normRoundPackToF32.c
      csrc/source/s_normRoundPackToF64.c
      csrc/source/s_normSubnormalExtF80Sig.c
      csrc/source/s_normSubnormalF16Sig.c
      csrc/source/s_normSubnormalF32Sig.c
      csrc/source/s_normSubnormalF64Sig.c
      csrc/source/s_remStepMBy32.c
      csrc/source/s_roundMToI64.c
      csrc/source/s_roundMToUI64.c
      csrc/source/s_roundPackToExtF80.c
      csrc/source/s_roundPackToF128.c
      csrc/source/s_roundPackToF16.c
      csrc/source/s_roundPackToF32.c
      csrc/source/s_roundPackToF64.c
      csrc/source/s_roundToI32.c
      csrc/source/s_roundToI64.c
      csrc/source/s_roundToUI32.c
      csrc/source/s_roundToUI64.c
      csrc/source/s_shiftRightJam128.c
      csrc/source/s_shiftRightJam128Extra.c
      csrc/source/s_shiftRightJam256M.c
      csrc/source/s_shiftRightJam32.c
      csrc/source/s_shiftRightJam64.c
      csrc/source/s_shiftRightJam64Extra.c
      csrc/source/s_shortShiftLeft128.c
      csrc/source/s_shortShiftLeft64To96M.c
      csrc/source/s_shortShiftLeftM.c
      csrc/source/s_shortShiftRight128.c
      csrc/source/s_shortShiftRightExtendM.c
      csrc/source/s_shortShiftRightJam128.c
      csrc/source/s_shortShiftRightJam128Extra.c
      csrc/source/s_shortShiftRightJam64.c
      csrc/source/s_shortShiftRightJam64Extra.c
      csrc/source/s_shortShiftRightJamM.c
      csrc/source/s_shortShiftRightM.c
      csrc/source/s_sub128.c
      csrc/source/s_sub1XM.c
      csrc/source/s_sub256M.c
      csrc/source/s_subM.c
      csrc/source/s_subMagsExtF80.c
      csrc/source/s_subMagsF128.c
      csrc/source/s_subMagsF16.c
      csrc/source/s_subMagsF32.c
      csrc/source/s_subMagsF64.c
      csrc/source/softfloat_state.c
      csrc/source/ui32_to_extF80.c
      csrc/source/ui32_to_extF80M.c
      csrc/source/ui32_to_f128.c
      csrc/source/ui32_to_f128M.c
      csrc/source/ui32_to_f16.c
      csrc/source/ui32_to_f32.c
      csrc/source/ui32_to_f64.c
      csrc/source/ui64_to_extF80.c
      csrc/source/ui64_to_extF80M.c
      csrc/source/ui64_to_f128.c
      csrc/source/ui64_to_f128M.c
      csrc/source/ui64_to_f16.c
      csrc/source/ui64_to_f32.c
      csrc/source/ui64_to_f64.c
  else
    extra-libraries:     softfloat1

-- executable fpgen
--   hs-source-dirs:      test
--   main-is:             Fpgen.hs
--   ghc-options:         -threaded -Wall
--   default-language:    Haskell2010
--   build-depends:       base,
--                        softfloat-hs,
--                        parsec,
--                        directory,
--                        process

-- executable testfloat
--   hs-source-dirs:      test
--   main-is:             Testfloat.hs
--   other-modules:       Ops
--   ghc-options:         -threaded -Wall
--   default-language:    Haskell2010
--   build-depends:       base,
--                        softfloat-hs,
--                        split,
--                        process,
--                        optparse-applicative,
--                        random
